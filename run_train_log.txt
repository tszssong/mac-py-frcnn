./experiments/scripts/faster_rcnn_end2end.sh 0 MMCV5 pascal_voc
+ set -e
+ export PYTHONUNBUFFERED=True
+ PYTHONUNBUFFERED=True
+ GPU_ID=0
+ NET=MMCV5
+ NET_lc=mmcv5
+ DATASET=pascal_voc
+ array=($@)
+ len=3
+ EXTRA_ARGS=
+ EXTRA_ARGS_SLUG=
+ case $DATASET in
+ TRAIN_IMDB=voc_2007_trainval
+ TEST_IMDB=voc_2007_test
+ PT_DIR=pascal_voc
+ ITERS=500000
++ date +%Y-%m-%d_%H-%M-%S
+ LOG=experiments/logs/faster_rcnn_end2end_MMCV5_.txt.2018-05-25_21-02-23
+ exec
++ tee -a experiments/logs/faster_rcnn_end2end_MMCV5_.txt.2018-05-25_21-02-23
+ echo Logging output to experiments/logs/faster_rcnn_end2end_MMCV5_.txt.2018-05-25_21-02-23
Logging output to experiments/logs/faster_rcnn_end2end_MMCV5_.txt.2018-05-25_21-02-23
+ ./tools/train_net.py --gpu 0 --solver models/pascal_voc/MMCV5/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/MMCV5.v2.caffemodel --imdb voc_2007_trainval --iters 500000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=0, imdb_name='voc_2007_trainval', max_iters=500000, pretrained_model='data/imagenet_models/MMCV5.v2.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/MMCV5/faster_rcnn_end2end/solver.prototxt')
Using config:
{'DATA_DIR': '/home/song/branch_faster_rcnn/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 0,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/song/branch_faster_rcnn/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/home/song/branch_faster_rcnn',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 1000,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 100,
          'RPN_PRE_NMS_TOP_N': 1000,
          'SCALES': [480],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 4,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BGR_OFFSET_PERCENT': 0.3,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'BLUR_PERCENT': 0.3,
           'FG_FRACTION': 0.5,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMAGES_LIST': [],
           'IMS_PER_BATCH': 1,
           'LIGHTING_PERCENT': 0.3,
           'MAX_SIZE': 1000,
           'PROPOSAL_METHOD': 'gt',
           'ROTATE_DEGREE': 20,
           'ROTATE_PERCENT': 0.3,
           'RPN_BATCHSIZE': 4,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 4000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [480],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 10000,
           'USE_BGR_OFFSET': True,
           'USE_BLUR': True,
           'USE_FLIPPED': True,
           'USE_LIGHTING': True,
           'USE_PREFETCH': True,
           'USE_ROTATE': True},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...