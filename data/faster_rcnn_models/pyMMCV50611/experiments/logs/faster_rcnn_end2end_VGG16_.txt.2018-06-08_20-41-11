+ echo Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2018-06-08_20-41-11
Logging output to experiments/logs/faster_rcnn_end2end_VGG16_.txt.2018-06-08_20-41-11
+ ./tools/train_net.py --gpu 3 --solver models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt --weights data/imagenet_models/VGG_ILSVRC_16_layers.caffemodel --imdb voc_2007_trainval --iters 70000 --cfg experiments/cfgs/faster_rcnn_end2end.yml
Called with args:
Namespace(cfg_file='experiments/cfgs/faster_rcnn_end2end.yml', gpu_id=3, imdb_name='voc_2007_trainval', max_iters=70000, pretrained_model='data/imagenet_models/VGG_ILSVRC_16_layers.caffemodel', randomize=False, set_cfgs=None, solver='models/pascal_voc/VGG16/faster_rcnn_end2end/solver.prototxt')
Using config:
{'DATA_DIR': '/nfs/zhengmeisong/wkspace/caffe_wk/py-faster-rcnn/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 3,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/nfs/zhengmeisong/wkspace/caffe_wk/py-faster-rcnn/models/pascal_voc',
 'PIXEL_MEANS': array([[[102.9801, 115.9465, 122.7717]]]),
 'RNG_SEED': 3,
 'ROOT_DIR': '/nfs/zhengmeisong/wkspace/caffe_wk/py-faster-rcnn',
 'TEST': {'BBOX_REG': True,
          'HAS_RPN': True,
          'MAX_SIZE': 256,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [144],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 128,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': True,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 256,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [144],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 10000,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': True}
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /nfs/zhengmeisong/wkspace/caffe_wk/py-faster-rcnn/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
done
264224 roidb entries
Output will be saved to `/nfs/zhengmeisong/wkspace/caffe_wk/py-faster-rcnn/output/faster_rcnn_end2end/voc_2007_trainval`
Filtered 0 roidb entries: 264224 -> 264224
Computing bounding-box regression targets...
bbox target means:
[[0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]
 [0. 0. 0. 0.]]
[0. 0. 0. 0.]
bbox target stdevs:
[[0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]
 [0.1 0.1 0.2 0.2]]
[0.1 0.1 0.2 0.2]
Normalizing targets
done
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0608 20:51:05.886616  6935 solver.cpp:48] Initializing solver from parameters: 
train_net: "models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt"
base_lr: 0.0001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 50000
snapshot: 0
snapshot_prefix: "vgg16_faster_rcnn"
average_loss: 100
iter_size: 2
I0608 20:51:05.886690  6935 solver.cpp:81] Creating training net from train_net file: models/pascal_voc/VGG16/faster_rcnn_end2end/train.prototxt
I0608 20:51:05.977463  6935 net.cpp:49] Initializing net from parameters: 
name: "VGG_ILSVRC_16_layers"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 8"
  }
}
layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5_3"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 8"
  }
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_h: 7
    pooled_w: 7
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 32
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "loss_cls"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 1
}
I0608 20:51:05.977799  6935 layer_factory.hpp:77] Creating layer input-data
I0608 20:51:06.048647  6935 net.cpp:106] Creating Layer input-data
I0608 20:51:06.048702  6935 net.cpp:411] input-data -> data
I0608 20:51:06.048723  6935 net.cpp:411] input-data -> im_info
I0608 20:51:06.048737  6935 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0608 20:51:06.663856  6935 net.cpp:150] Setting up input-data
I0608 20:51:06.663902  6935 net.cpp:157] Top shape: 1 3 144 256 (110592)
I0608 20:51:06.663914  6935 net.cpp:157] Top shape: 1 3 (3)
I0608 20:51:06.663923  6935 net.cpp:157] Top shape: 1 4 (4)
I0608 20:51:06.663933  6935 net.cpp:165] Memory required for data: 442396
I0608 20:51:06.663946  6935 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0608 20:51:06.663970  6935 net.cpp:106] Creating Layer data_input-data_0_split
I0608 20:51:06.663983  6935 net.cpp:454] data_input-data_0_split <- data
I0608 20:51:06.664010  6935 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0608 20:51:06.664027  6935 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0608 20:51:06.664100  6935 net.cpp:150] Setting up data_input-data_0_split
I0608 20:51:06.664121  6935 net.cpp:157] Top shape: 1 3 144 256 (110592)
I0608 20:51:06.664153  6935 net.cpp:157] Top shape: 1 3 144 256 (110592)
I0608 20:51:06.664165  6935 net.cpp:165] Memory required for data: 1327132
I0608 20:51:06.664180  6935 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0608 20:51:06.664193  6935 net.cpp:106] Creating Layer im_info_input-data_1_split
I0608 20:51:06.664206  6935 net.cpp:454] im_info_input-data_1_split <- im_info
I0608 20:51:06.664227  6935 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0608 20:51:06.664239  6935 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0608 20:51:06.664299  6935 net.cpp:150] Setting up im_info_input-data_1_split
I0608 20:51:06.664314  6935 net.cpp:157] Top shape: 1 3 (3)
I0608 20:51:06.664322  6935 net.cpp:157] Top shape: 1 3 (3)
I0608 20:51:06.664330  6935 net.cpp:165] Memory required for data: 1327156
I0608 20:51:06.664337  6935 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0608 20:51:06.664355  6935 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0608 20:51:06.664366  6935 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0608 20:51:06.664376  6935 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0608 20:51:06.664386  6935 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0608 20:51:06.664454  6935 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0608 20:51:06.664474  6935 net.cpp:157] Top shape: 1 4 (4)
I0608 20:51:06.664484  6935 net.cpp:157] Top shape: 1 4 (4)
I0608 20:51:06.664490  6935 net.cpp:165] Memory required for data: 1327188
I0608 20:51:06.664497  6935 layer_factory.hpp:77] Creating layer conv1_1
I0608 20:51:06.664518  6935 net.cpp:106] Creating Layer conv1_1
I0608 20:51:06.664533  6935 net.cpp:454] conv1_1 <- data_input-data_0_split_0
I0608 20:51:06.664546  6935 net.cpp:411] conv1_1 -> conv1_1
I0608 20:51:06.672380  6935 net.cpp:150] Setting up conv1_1
I0608 20:51:06.672420  6935 net.cpp:157] Top shape: 1 64 144 256 (2359296)
I0608 20:51:06.672430  6935 net.cpp:165] Memory required for data: 10764372
I0608 20:51:06.672448  6935 layer_factory.hpp:77] Creating layer relu1_1
I0608 20:51:06.672464  6935 net.cpp:106] Creating Layer relu1_1
I0608 20:51:06.672474  6935 net.cpp:454] relu1_1 <- conv1_1
I0608 20:51:06.672487  6935 net.cpp:397] relu1_1 -> conv1_1 (in-place)
I0608 20:51:06.672499  6935 net.cpp:150] Setting up relu1_1
I0608 20:51:06.672511  6935 net.cpp:157] Top shape: 1 64 144 256 (2359296)
I0608 20:51:06.672519  6935 net.cpp:165] Memory required for data: 20201556
I0608 20:51:06.672534  6935 layer_factory.hpp:77] Creating layer conv1_2
I0608 20:51:06.672549  6935 net.cpp:106] Creating Layer conv1_2
I0608 20:51:06.672560  6935 net.cpp:454] conv1_2 <- conv1_1
I0608 20:51:06.672572  6935 net.cpp:411] conv1_2 -> conv1_2
I0608 20:51:06.672961  6935 net.cpp:150] Setting up conv1_2
I0608 20:51:06.672986  6935 net.cpp:157] Top shape: 1 64 144 256 (2359296)
I0608 20:51:06.672996  6935 net.cpp:165] Memory required for data: 29638740
I0608 20:51:06.673008  6935 layer_factory.hpp:77] Creating layer relu1_2
I0608 20:51:06.673022  6935 net.cpp:106] Creating Layer relu1_2
I0608 20:51:06.673030  6935 net.cpp:454] relu1_2 <- conv1_2
I0608 20:51:06.673048  6935 net.cpp:397] relu1_2 -> conv1_2 (in-place)
I0608 20:51:06.673061  6935 net.cpp:150] Setting up relu1_2
I0608 20:51:06.673071  6935 net.cpp:157] Top shape: 1 64 144 256 (2359296)
I0608 20:51:06.673079  6935 net.cpp:165] Memory required for data: 39075924
I0608 20:51:06.673086  6935 layer_factory.hpp:77] Creating layer pool1
I0608 20:51:06.673102  6935 net.cpp:106] Creating Layer pool1
I0608 20:51:06.673112  6935 net.cpp:454] pool1 <- conv1_2
I0608 20:51:06.673123  6935 net.cpp:411] pool1 -> pool1
I0608 20:51:06.673190  6935 net.cpp:150] Setting up pool1
I0608 20:51:06.673221  6935 net.cpp:157] Top shape: 1 64 72 128 (589824)
I0608 20:51:06.673229  6935 net.cpp:165] Memory required for data: 41435220
I0608 20:51:06.673238  6935 layer_factory.hpp:77] Creating layer conv2_1
I0608 20:51:06.673251  6935 net.cpp:106] Creating Layer conv2_1
I0608 20:51:06.673262  6935 net.cpp:454] conv2_1 <- pool1
I0608 20:51:06.673272  6935 net.cpp:411] conv2_1 -> conv2_1
I0608 20:51:06.682027  6935 net.cpp:150] Setting up conv2_1
I0608 20:51:06.682060  6935 net.cpp:157] Top shape: 1 128 72 128 (1179648)
I0608 20:51:06.682070  6935 net.cpp:165] Memory required for data: 46153812
I0608 20:51:06.682085  6935 layer_factory.hpp:77] Creating layer relu2_1
I0608 20:51:06.682098  6935 net.cpp:106] Creating Layer relu2_1
I0608 20:51:06.682109  6935 net.cpp:454] relu2_1 <- conv2_1
I0608 20:51:06.682121  6935 net.cpp:397] relu2_1 -> conv2_1 (in-place)
I0608 20:51:06.682134  6935 net.cpp:150] Setting up relu2_1
I0608 20:51:06.682145  6935 net.cpp:157] Top shape: 1 128 72 128 (1179648)
I0608 20:51:06.682178  6935 net.cpp:165] Memory required for data: 50872404
I0608 20:51:06.682297  6935 layer_factory.hpp:77] Creating layer conv2_2
I0608 20:51:06.682330  6935 net.cpp:106] Creating Layer conv2_2
I0608 20:51:06.682343  6935 net.cpp:454] conv2_2 <- conv2_1
I0608 20:51:06.682371  6935 net.cpp:411] conv2_2 -> conv2_2
I0608 20:51:06.682829  6935 net.cpp:150] Setting up conv2_2
I0608 20:51:06.682862  6935 net.cpp:157] Top shape: 1 128 72 128 (1179648)
I0608 20:51:06.682870  6935 net.cpp:165] Memory required for data: 55590996
I0608 20:51:06.682880  6935 layer_factory.hpp:77] Creating layer relu2_2
I0608 20:51:06.682893  6935 net.cpp:106] Creating Layer relu2_2
I0608 20:51:06.682904  6935 net.cpp:454] relu2_2 <- conv2_2
I0608 20:51:06.682915  6935 net.cpp:397] relu2_2 -> conv2_2 (in-place)
I0608 20:51:06.682935  6935 net.cpp:150] Setting up relu2_2
I0608 20:51:06.682947  6935 net.cpp:157] Top shape: 1 128 72 128 (1179648)
I0608 20:51:06.682955  6935 net.cpp:165] Memory required for data: 60309588
I0608 20:51:06.682961  6935 layer_factory.hpp:77] Creating layer pool2
I0608 20:51:06.682972  6935 net.cpp:106] Creating Layer pool2
I0608 20:51:06.682981  6935 net.cpp:454] pool2 <- conv2_2
I0608 20:51:06.682993  6935 net.cpp:411] pool2 -> pool2
I0608 20:51:06.683055  6935 net.cpp:150] Setting up pool2
I0608 20:51:06.683074  6935 net.cpp:157] Top shape: 1 128 36 64 (294912)
I0608 20:51:06.683082  6935 net.cpp:165] Memory required for data: 61489236
I0608 20:51:06.683090  6935 layer_factory.hpp:77] Creating layer conv3_1
I0608 20:51:06.683106  6935 net.cpp:106] Creating Layer conv3_1
I0608 20:51:06.683116  6935 net.cpp:454] conv3_1 <- pool2
I0608 20:51:06.683128  6935 net.cpp:411] conv3_1 -> conv3_1
I0608 20:51:06.683647  6935 net.cpp:150] Setting up conv3_1
I0608 20:51:06.683671  6935 net.cpp:157] Top shape: 1 256 36 64 (589824)
I0608 20:51:06.683679  6935 net.cpp:165] Memory required for data: 63848532
I0608 20:51:06.683693  6935 layer_factory.hpp:77] Creating layer relu3_1
I0608 20:51:06.683710  6935 net.cpp:106] Creating Layer relu3_1
I0608 20:51:06.683718  6935 net.cpp:454] relu3_1 <- conv3_1
I0608 20:51:06.683753  6935 net.cpp:397] relu3_1 -> conv3_1 (in-place)
I0608 20:51:06.683768  6935 net.cpp:150] Setting up relu3_1
I0608 20:51:06.683778  6935 net.cpp:157] Top shape: 1 256 36 64 (589824)
I0608 20:51:06.683786  6935 net.cpp:165] Memory required for data: 66207828
I0608 20:51:06.683794  6935 layer_factory.hpp:77] Creating layer conv3_2
I0608 20:51:06.683845  6935 net.cpp:106] Creating Layer conv3_2
I0608 20:51:06.683853  6935 net.cpp:454] conv3_2 <- conv3_1
I0608 20:51:06.683863  6935 net.cpp:411] conv3_2 -> conv3_2
I0608 20:51:06.688048  6935 net.cpp:150] Setting up conv3_2
I0608 20:51:06.688082  6935 net.cpp:157] Top shape: 1 256 36 64 (589824)
I0608 20:51:06.688091  6935 net.cpp:165] Memory required for data: 68567124
I0608 20:51:06.688103  6935 layer_factory.hpp:77] Creating layer relu3_2
I0608 20:51:06.688114  6935 net.cpp:106] Creating Layer relu3_2
I0608 20:51:06.688127  6935 net.cpp:454] relu3_2 <- conv3_2
I0608 20:51:06.688139  6935 net.cpp:397] relu3_2 -> conv3_2 (in-place)
I0608 20:51:06.688151  6935 net.cpp:150] Setting up relu3_2
I0608 20:51:06.688163  6935 net.cpp:157] Top shape: 1 256 36 64 (589824)
I0608 20:51:06.688184  6935 net.cpp:165] Memory required for data: 70926420
I0608 20:51:06.688192  6935 layer_factory.hpp:77] Creating layer conv3_3
I0608 20:51:06.688203  6935 net.cpp:106] Creating Layer conv3_3
I0608 20:51:06.688211  6935 net.cpp:454] conv3_3 <- conv3_2
I0608 20:51:06.688227  6935 net.cpp:411] conv3_3 -> conv3_3
I0608 20:51:06.692497  6935 net.cpp:150] Setting up conv3_3
I0608 20:51:06.692528  6935 net.cpp:157] Top shape: 1 256 36 64 (589824)
I0608 20:51:06.692538  6935 net.cpp:165] Memory required for data: 73285716
I0608 20:51:06.692550  6935 layer_factory.hpp:77] Creating layer relu3_3
I0608 20:51:06.692565  6935 net.cpp:106] Creating Layer relu3_3
I0608 20:51:06.692576  6935 net.cpp:454] relu3_3 <- conv3_3
I0608 20:51:06.692586  6935 net.cpp:397] relu3_3 -> conv3_3 (in-place)
I0608 20:51:06.692598  6935 net.cpp:150] Setting up relu3_3
I0608 20:51:06.692607  6935 net.cpp:157] Top shape: 1 256 36 64 (589824)
I0608 20:51:06.692616  6935 net.cpp:165] Memory required for data: 75645012
I0608 20:51:06.692625  6935 layer_factory.hpp:77] Creating layer pool3
I0608 20:51:06.692636  6935 net.cpp:106] Creating Layer pool3
I0608 20:51:06.692644  6935 net.cpp:454] pool3 <- conv3_3
I0608 20:51:06.692653  6935 net.cpp:411] pool3 -> pool3
I0608 20:51:06.692723  6935 net.cpp:150] Setting up pool3
I0608 20:51:06.692744  6935 net.cpp:157] Top shape: 1 256 18 32 (147456)
I0608 20:51:06.692751  6935 net.cpp:165] Memory required for data: 76234836
I0608 20:51:06.692759  6935 layer_factory.hpp:77] Creating layer conv4_1
I0608 20:51:06.692773  6935 net.cpp:106] Creating Layer conv4_1
I0608 20:51:06.692783  6935 net.cpp:454] conv4_1 <- pool3
I0608 20:51:06.692797  6935 net.cpp:411] conv4_1 -> conv4_1
I0608 20:51:06.703459  6935 net.cpp:150] Setting up conv4_1
I0608 20:51:06.703490  6935 net.cpp:157] Top shape: 1 512 18 32 (294912)
I0608 20:51:06.703541  6935 net.cpp:165] Memory required for data: 77414484
I0608 20:51:06.703553  6935 layer_factory.hpp:77] Creating layer relu4_1
I0608 20:51:06.703565  6935 net.cpp:106] Creating Layer relu4_1
I0608 20:51:06.703574  6935 net.cpp:454] relu4_1 <- conv4_1
I0608 20:51:06.703588  6935 net.cpp:397] relu4_1 -> conv4_1 (in-place)
I0608 20:51:06.703600  6935 net.cpp:150] Setting up relu4_1
I0608 20:51:06.703615  6935 net.cpp:157] Top shape: 1 512 18 32 (294912)
I0608 20:51:06.703622  6935 net.cpp:165] Memory required for data: 78594132
I0608 20:51:06.703634  6935 layer_factory.hpp:77] Creating layer conv4_2
I0608 20:51:06.703645  6935 net.cpp:106] Creating Layer conv4_2
I0608 20:51:06.703652  6935 net.cpp:454] conv4_2 <- conv4_1
I0608 20:51:06.703665  6935 net.cpp:411] conv4_2 -> conv4_2
I0608 20:51:06.713991  6935 net.cpp:150] Setting up conv4_2
I0608 20:51:06.714028  6935 net.cpp:157] Top shape: 1 512 18 32 (294912)
I0608 20:51:06.714040  6935 net.cpp:165] Memory required for data: 79773780
I0608 20:51:06.714067  6935 layer_factory.hpp:77] Creating layer relu4_2
I0608 20:51:06.714094  6935 net.cpp:106] Creating Layer relu4_2
I0608 20:51:06.714112  6935 net.cpp:454] relu4_2 <- conv4_2
I0608 20:51:06.714280  6935 net.cpp:397] relu4_2 -> conv4_2 (in-place)
I0608 20:51:06.714387  6935 net.cpp:150] Setting up relu4_2
I0608 20:51:06.714429  6935 net.cpp:157] Top shape: 1 512 18 32 (294912)
I0608 20:51:06.714462  6935 net.cpp:165] Memory required for data: 80953428
I0608 20:51:06.714481  6935 layer_factory.hpp:77] Creating layer conv4_3
I0608 20:51:06.714516  6935 net.cpp:106] Creating Layer conv4_3
I0608 20:51:06.714555  6935 net.cpp:454] conv4_3 <- conv4_2
I0608 20:51:06.714591  6935 net.cpp:411] conv4_3 -> conv4_3
I0608 20:51:06.725070  6935 net.cpp:150] Setting up conv4_3
I0608 20:51:06.725111  6935 net.cpp:157] Top shape: 1 512 18 32 (294912)
I0608 20:51:06.725121  6935 net.cpp:165] Memory required for data: 82133076
I0608 20:51:06.725134  6935 layer_factory.hpp:77] Creating layer relu4_3
I0608 20:51:06.725148  6935 net.cpp:106] Creating Layer relu4_3
I0608 20:51:06.725157  6935 net.cpp:454] relu4_3 <- conv4_3
I0608 20:51:06.725172  6935 net.cpp:397] relu4_3 -> conv4_3 (in-place)
I0608 20:51:06.725186  6935 net.cpp:150] Setting up relu4_3
I0608 20:51:06.725194  6935 net.cpp:157] Top shape: 1 512 18 32 (294912)
I0608 20:51:06.725203  6935 net.cpp:165] Memory required for data: 83312724
I0608 20:51:06.725211  6935 layer_factory.hpp:77] Creating layer pool4
I0608 20:51:06.725222  6935 net.cpp:106] Creating Layer pool4
I0608 20:51:06.725229  6935 net.cpp:454] pool4 <- conv4_3
I0608 20:51:06.725239  6935 net.cpp:411] pool4 -> pool4
I0608 20:51:06.725311  6935 net.cpp:150] Setting up pool4
I0608 20:51:06.725332  6935 net.cpp:157] Top shape: 1 512 9 16 (73728)
I0608 20:51:06.725338  6935 net.cpp:165] Memory required for data: 83607636
I0608 20:51:06.725347  6935 layer_factory.hpp:77] Creating layer conv5_1
I0608 20:51:06.725361  6935 net.cpp:106] Creating Layer conv5_1
I0608 20:51:06.725371  6935 net.cpp:454] conv5_1 <- pool4
I0608 20:51:06.725385  6935 net.cpp:411] conv5_1 -> conv5_1
I0608 20:51:06.736613  6935 net.cpp:150] Setting up conv5_1
I0608 20:51:06.736657  6935 net.cpp:157] Top shape: 1 512 9 16 (73728)
I0608 20:51:06.736677  6935 net.cpp:165] Memory required for data: 83902548
I0608 20:51:06.736691  6935 layer_factory.hpp:77] Creating layer relu5_1
I0608 20:51:06.736707  6935 net.cpp:106] Creating Layer relu5_1
I0608 20:51:06.736732  6935 net.cpp:454] relu5_1 <- conv5_1
I0608 20:51:06.736752  6935 net.cpp:397] relu5_1 -> conv5_1 (in-place)
I0608 20:51:06.736765  6935 net.cpp:150] Setting up relu5_1
I0608 20:51:06.736785  6935 net.cpp:157] Top shape: 1 512 9 16 (73728)
I0608 20:51:06.736793  6935 net.cpp:165] Memory required for data: 84197460
I0608 20:51:06.736800  6935 layer_factory.hpp:77] Creating layer conv5_2
I0608 20:51:06.736816  6935 net.cpp:106] Creating Layer conv5_2
I0608 20:51:06.736858  6935 net.cpp:454] conv5_2 <- conv5_1
I0608 20:51:06.736869  6935 net.cpp:411] conv5_2 -> conv5_2
I0608 20:51:06.746611  6935 net.cpp:150] Setting up conv5_2
I0608 20:51:06.746659  6935 net.cpp:157] Top shape: 1 512 9 16 (73728)
I0608 20:51:06.746668  6935 net.cpp:165] Memory required for data: 84492372
I0608 20:51:06.746683  6935 layer_factory.hpp:77] Creating layer relu5_2
I0608 20:51:06.746701  6935 net.cpp:106] Creating Layer relu5_2
I0608 20:51:06.746713  6935 net.cpp:454] relu5_2 <- conv5_2
I0608 20:51:06.746726  6935 net.cpp:397] relu5_2 -> conv5_2 (in-place)
I0608 20:51:06.746739  6935 net.cpp:150] Setting up relu5_2
I0608 20:51:06.746752  6935 net.cpp:157] Top shape: 1 512 9 16 (73728)
I0608 20:51:06.746758  6935 net.cpp:165] Memory required for data: 84787284
I0608 20:51:06.746765  6935 layer_factory.hpp:77] Creating layer conv5_3
I0608 20:51:06.746806  6935 net.cpp:106] Creating Layer conv5_3
I0608 20:51:06.746831  6935 net.cpp:454] conv5_3 <- conv5_2
I0608 20:51:06.746843  6935 net.cpp:411] conv5_3 -> conv5_3
I0608 20:51:06.756043  6935 net.cpp:150] Setting up conv5_3
I0608 20:51:06.756086  6935 net.cpp:157] Top shape: 1 512 9 16 (73728)
I0608 20:51:06.756096  6935 net.cpp:165] Memory required for data: 85082196
I0608 20:51:06.756109  6935 layer_factory.hpp:77] Creating layer relu5_3
I0608 20:51:06.756122  6935 net.cpp:106] Creating Layer relu5_3
I0608 20:51:06.756134  6935 net.cpp:454] relu5_3 <- conv5_3
I0608 20:51:06.756145  6935 net.cpp:397] relu5_3 -> conv5_3 (in-place)
I0608 20:51:06.756157  6935 net.cpp:150] Setting up relu5_3
I0608 20:51:06.756168  6935 net.cpp:157] Top shape: 1 512 9 16 (73728)
I0608 20:51:06.756176  6935 net.cpp:165] Memory required for data: 85377108
I0608 20:51:06.756189  6935 layer_factory.hpp:77] Creating layer conv5_3_relu5_3_0_split
I0608 20:51:06.756228  6935 net.cpp:106] Creating Layer conv5_3_relu5_3_0_split
I0608 20:51:06.756255  6935 net.cpp:454] conv5_3_relu5_3_0_split <- conv5_3
I0608 20:51:06.756276  6935 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_0
I0608 20:51:06.756319  6935 net.cpp:411] conv5_3_relu5_3_0_split -> conv5_3_relu5_3_0_split_1
I0608 20:51:06.756462  6935 net.cpp:150] Setting up conv5_3_relu5_3_0_split
I0608 20:51:06.756553  6935 net.cpp:157] Top shape: 1 512 9 16 (73728)
I0608 20:51:06.756731  6935 net.cpp:157] Top shape: 1 512 9 16 (73728)
I0608 20:51:06.756789  6935 net.cpp:165] Memory required for data: 85966932
I0608 20:51:06.756801  6935 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0608 20:51:06.756830  6935 net.cpp:106] Creating Layer rpn_conv/3x3
I0608 20:51:06.756840  6935 net.cpp:454] rpn_conv/3x3 <- conv5_3_relu5_3_0_split_0
I0608 20:51:06.756855  6935 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0608 20:51:06.792039  6935 net.cpp:150] Setting up rpn_conv/3x3
I0608 20:51:06.792095  6935 net.cpp:157] Top shape: 1 512 9 16 (73728)
I0608 20:51:06.792105  6935 net.cpp:165] Memory required for data: 86261844
I0608 20:51:06.792122  6935 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0608 20:51:06.792141  6935 net.cpp:106] Creating Layer rpn_relu/3x3
I0608 20:51:06.792155  6935 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0608 20:51:06.792176  6935 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0608 20:51:06.792199  6935 net.cpp:150] Setting up rpn_relu/3x3
I0608 20:51:06.792222  6935 net.cpp:157] Top shape: 1 512 9 16 (73728)
I0608 20:51:06.792233  6935 net.cpp:165] Memory required for data: 86556756
I0608 20:51:06.792244  6935 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0608 20:51:06.792264  6935 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0608 20:51:06.792276  6935 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0608 20:51:06.792330  6935 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0608 20:51:06.792347  6935 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0608 20:51:06.792472  6935 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0608 20:51:06.792495  6935 net.cpp:157] Top shape: 1 512 9 16 (73728)
I0608 20:51:06.792531  6935 net.cpp:157] Top shape: 1 512 9 16 (73728)
I0608 20:51:06.792558  6935 net.cpp:165] Memory required for data: 87146580
I0608 20:51:06.792590  6935 layer_factory.hpp:77] Creating layer rpn_cls_score
I0608 20:51:06.792621  6935 net.cpp:106] Creating Layer rpn_cls_score
I0608 20:51:06.792651  6935 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0608 20:51:06.792677  6935 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0608 20:51:06.793200  6935 net.cpp:150] Setting up rpn_cls_score
I0608 20:51:06.793227  6935 net.cpp:157] Top shape: 1 18 9 16 (2592)
I0608 20:51:06.793236  6935 net.cpp:165] Memory required for data: 87156948
I0608 20:51:06.793247  6935 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0608 20:51:06.793263  6935 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0608 20:51:06.793273  6935 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0608 20:51:06.793285  6935 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0608 20:51:06.793310  6935 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0608 20:51:06.793385  6935 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0608 20:51:06.793412  6935 net.cpp:157] Top shape: 1 18 9 16 (2592)
I0608 20:51:06.793432  6935 net.cpp:157] Top shape: 1 18 9 16 (2592)
I0608 20:51:06.793455  6935 net.cpp:165] Memory required for data: 87177684
I0608 20:51:06.793467  6935 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0608 20:51:06.793486  6935 net.cpp:106] Creating Layer rpn_bbox_pred
I0608 20:51:06.793509  6935 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0608 20:51:06.793530  6935 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0608 20:51:06.794143  6935 net.cpp:150] Setting up rpn_bbox_pred
I0608 20:51:06.794353  6935 net.cpp:157] Top shape: 1 36 9 16 (5184)
I0608 20:51:06.794379  6935 net.cpp:165] Memory required for data: 87198420
I0608 20:51:06.794395  6935 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0608 20:51:06.794443  6935 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0608 20:51:06.794492  6935 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0608 20:51:06.794522  6935 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0608 20:51:06.794545  6935 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0608 20:51:06.794618  6935 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0608 20:51:06.794639  6935 net.cpp:157] Top shape: 1 36 9 16 (5184)
I0608 20:51:06.794648  6935 net.cpp:157] Top shape: 1 36 9 16 (5184)
I0608 20:51:06.794656  6935 net.cpp:165] Memory required for data: 87239892
I0608 20:51:06.794663  6935 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0608 20:51:06.794682  6935 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0608 20:51:06.794692  6935 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0608 20:51:06.794704  6935 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0608 20:51:06.794754  6935 net.cpp:150] Setting up rpn_cls_score_reshape
I0608 20:51:06.794773  6935 net.cpp:157] Top shape: 1 2 81 16 (2592)
I0608 20:51:06.794780  6935 net.cpp:165] Memory required for data: 87250260
I0608 20:51:06.794788  6935 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0608 20:51:06.794800  6935 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0608 20:51:06.794808  6935 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0608 20:51:06.794823  6935 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0608 20:51:06.794844  6935 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0608 20:51:06.794929  6935 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0608 20:51:06.794963  6935 net.cpp:157] Top shape: 1 2 81 16 (2592)
I0608 20:51:06.794972  6935 net.cpp:157] Top shape: 1 2 81 16 (2592)
I0608 20:51:06.794980  6935 net.cpp:165] Memory required for data: 87270996
I0608 20:51:06.794991  6935 layer_factory.hpp:77] Creating layer rpn-data
  File "/nfs/zhengmeisong/wkspace/caffe_wk/py-faster-rcnn/tools/../lib/rpn/anchor_target_layer.py", line 31
    self._num_anchors = self._anchors.shape[0]
       ^
SyntaxError: invalid syntax
Traceback (most recent call last):
  File "./tools/train_net.py", line 112, in <module>
    max_iters=args.max_iters)
  File "/nfs/zhengmeisong/wkspace/caffe_wk/py-faster-rcnn/tools/../lib/fast_rcnn/train.py", line 157, in train_net
    pretrained_model=pretrained_model)
  File "/nfs/zhengmeisong/wkspace/caffe_wk/py-faster-rcnn/tools/../lib/fast_rcnn/train.py", line 43, in __init__
    self.solver = caffe.SGDSolver(solver_prototxt)
SystemError: NULL result without error in PyObject_Call
