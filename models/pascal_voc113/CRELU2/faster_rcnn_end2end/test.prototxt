name: "CRELU2"

input: "data"
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}

input: "im_info"
input_shape {
  dim: 1
  dim: 3
}

#========= conv1-conv5 ============

layer {
  name: "conv1_small"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 8
    kernel_size: 5
    stride: 2
    pad: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "power1"
  type: "Power"
  bottom: "conv1"
  top: "power1"
  power_param {
    power: 1.0
    scale: -1.0
    shift: 0.0
  }
}
layer {
  name: "concat1"
  type: "Concat"
  bottom: "conv1"
  bottom: "power1"
  top: "concat1"
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "concat1"
  top: "concat1"
}
layer {
  name: "mm_conv2"
  type: "Convolution"
  bottom: "concat1"
  top: "conv2"
  #propagate_down: false
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}

layer { 
  name: "power2"
  type: "Power"
  bottom: "conv2"
  top: "power2"
  power_param {
    power: 1.0
    scale: -1.0
    shift: 0.0
  }
}
layer { 
  name: "concat2"
  type: "Concat"
  bottom: "conv2"
  bottom: "power2"
  top: "concat2"
}
layer { 
  name: "relu2"
  type: "ReLU"
  bottom: "concat2"
  top: "concat2"
}

layer {
  name: "mm_conv3"
  type: "Convolution"
  bottom: "concat2"
  top: "conv3"
  #propagate_down: false
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer { 
  name: "power3"
  type: "Power"
  bottom: "conv3"
  top: "power3"
  power_param {
    power: 1.0
    scale: -1.0
    shift: 0.0
  }
}
layer { 
  name: "concat3"
  type: "Concat"
  bottom: "conv3"
  bottom: "power3"
  top: "concat3"
}
layer { 
  name: "relu3"
  type: "ReLU"
  bottom: "concat3"
  top: "concat3"
}


layer {
  name: "mm_conv4"
  type: "Convolution"
  bottom: "concat3"
  top: "conv4"
  #propagate_down: false
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 0
    kernel_size: 3
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}

layer { 
  name: "power4"
  type: "Power"
  bottom: "conv4"
  top: "power4"
  power_param {
    power: 1.0
    scale: -1.0
    shift: 0.0
  }
}
layer { 
  name: "concat4"
  type: "Concat"
  bottom: "conv4"
  bottom: "power4"
  top: "concat4"
}
layer { 
  name: "relu4"
  type: "ReLU"
  bottom: "concat4"
  top: "concat4"
}

layer {
  name: "mm_conv5"
  type: "Convolution"
  bottom: "concat4"
  top: "conv5"
  #propagate_down: false
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 0
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer { 
  name: "power5"
  type: "Power"
  bottom: "conv5"
  top: "power5"
  power_param {
    power: 1.0
    scale: -1.0
    shift: 0.0
  }
}
layer { 
  name: "concat5"
  type: "Concat"
  bottom: "conv5"
  bottom: "power5"
  top: "concat5"
}
layer { 
  name: "relu5"
  type: "ReLU"
  bottom: "concat5"
  top: "concat5"
}

#========= RPN ============

layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "concat5"
  top: "rpn/output"
  convolution_param {
    num_output: 64
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}

layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18   # 2(bg/fg) * 9(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36   # 4 * 9(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
   bottom: "rpn_cls_score"
   top: "rpn_cls_score_reshape"
   name: "rpn_cls_score_reshape"
   type: "Reshape"
   reshape_param { shape { dim: 0 dim: 2 dim: -1 dim: 0 } }
}

#========= RoI Proposal ============

layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: 'rpn_cls_prob_reshape'
  type: 'Reshape'
  bottom: 'rpn_cls_prob'
  top: 'rpn_cls_prob_reshape'
  reshape_param { shape { dim: 0 dim: 18 dim: -1 dim: 0 } }
}
layer {
  name: 'proposal'
  type: 'Python'
  bottom: 'rpn_cls_prob_reshape'
  bottom: 'rpn_bbox_pred'
  bottom: 'im_info'
  top: 'rois'
  python_param {
    module: 'rpn.proposal_layer'
    layer: 'ProposalLayer'
    param_str: "'feat_stride': 16"
  }
}

#========= RCNN ============

layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "concat5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_w: 4
    pooled_h: 4
    spatial_scale: 0.03125 # 1/16
  }
}
layer {
  name: "mm_fc6_L"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6_l"
  #propagate_down: false
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 128
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6_L"
  type: "ReLU"
  bottom: "fc6_l"
  top: "fc6_l"
}
layer {
  name: "mm_fc6_U"
  type: "InnerProduct"
  bottom: "fc6_l"
  top: "fc6_u"
  #propagate_down: false
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6_U"
  type: "ReLU"
  bottom: "fc6_u"
  top: "fc6_u"
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc6_u"
  top: "cls_score"
  inner_product_param {
    num_output: 2
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc6_u"
  top: "bbox_pred"
  inner_product_param {
    num_output: 8
  }
}
layer {
  name: "cls_prob"
  type: "Softmax"
  bottom: "cls_score"
  top: "cls_prob"
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
